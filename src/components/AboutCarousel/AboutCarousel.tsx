import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './AboutCarousel.css';

const slides = [
  {
    title: "El para quÃ©",
    description: "El objetivo del juego es ser un catalizador para crear conversaciones significativas que profundicen las conexiones humanas. MÃ¡s allÃ¡ del simple entretenimiento, la intenciÃ³n es abrir espacios de diÃ¡logo, tanto internos como con los demÃ¡s, donde cada participante pueda descubrir nuevas perspectivas, fortalecer lazos y promover un crecimiento personal y colectivo.",
    bullets: [
      // "Fomenta empatÃ­a y comprensiÃ³n.",
      // "Ideal para jugar en grupo o en solitario.",
      // "Abre espacios de diÃ¡logo y crecimiento."
    ]
  },
  {
    title: "El cÃ³mo",
    description: "A travÃ©s de preguntas para explorar emociones, experiencias y valores, el juego fomenta la empatÃ­a, la comprensiÃ³n y el aprendizaje entre los jugadores. TambiÃ©n se puede jugar en solitario, permitiendo al jugador reflexionar y conocerse a sÃ­ mismo en momentos de introspecciÃ³n.",
    bullets: [
    ]
  },
  {
    title: "PreparaciÃ³n",
    description: "EncontrÃ¡ un espacio cÃ³modo. Si jugÃ¡s solo, buscÃ¡ un lugar tranquilo para reflexionar.",
    bullets: [
      "ReÃºne a los participantes en cÃ­rculo.",
      "AsegÃºrate de que todos vean las preguntas.",
"PrepÃ¡rese para contestar, giren la ruleta, Â¡y listo!."
    ]
  },
  {
    title: "Modo de Juego",
    description: "ElegÃ­ cÃ³mo jugar segÃºn el momento:",
    bullets: [
      "Me toca: Responde el que girÃ³ la ruleta",
      "Te toca: El que girÃ³ la ruleta elige a quiÃ©n reponde.",
      "Modo Libre: Responde cualquiera.",
      "Modo Ronda: Todos responden la misma pregunta."
    ]
  },
  {
    title: "Consejos para Conectar",
    description: "Haz que cada partida sea especial:",
    bullets: [
      "Escucha con atenciÃ³n y respeto.",
      "SÃ© honesto para crear conexiones profundas.",
      "DiviÃ©rtete: rÃ­e, reflexiona y disfruta. ðŸ˜„"
    ]
  }
];

// Colores de la ruleta
const colors = [
  '#d9c0c9', // Rosa claro
  '#f3caad', // Naranja claro
  '#cbe3df', // Verde agua claro
  '#e3d5f1', // Lila claro
  '#f9e8b3', // Amarillo pÃ¡lido
  '#c6e2f5'  // Azul suave
];

const AboutCarousel: React.FC = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [direction, setDirection] = useState<'left' | 'right' | null>(null);
  const navigate = useNavigate();

  const nextSlide = () => {
    setDirection('right');
    setCurrentSlide((prevSlide) => (prevSlide + 1) % slides.length);
  };

  const prevSlide = () => {
    setDirection('left');
    setCurrentSlide((prevSlide) => (prevSlide - 1 + slides.length) % slides.length);
  };

  const startGame = () => {
    navigate("/game");
  };

  return (
    <div className="carousel-container">
      <div className="carousel-wrapper">
        <div
          key={currentSlide} // Forzar rerenderizaciÃ³n para animaciÃ³n
          className={`carousel-slide ${direction === 'right' ? 'slide-right' : direction === 'left' ? 'slide-left' : ''}`}
          style={{ backgroundColor: colors[currentSlide % colors.length] }}
        >
          <h2>{slides[currentSlide].title}</h2>
          <p>{slides[currentSlide].description}</p>
          <ul>
            {slides[currentSlide].bullets.map((bullet, index) => (
              <li key={index}>{bullet}</li>
            ))}
          </ul>
          <button className="cta-button" onClick={startGame}>
            Jugar ahora
          </button>
        </div>
      </div>
      <div className="carousel-controls">
        <button onClick={prevSlide}>Anterior</button>
        <button onClick={nextSlide}>Siguiente</button>
      </div>
    </div>
  );
};

export default AboutCarousel;